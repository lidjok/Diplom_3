{"name": "после оформления заказа его номер появляется в разделе В работе", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//img[@alt = 'Флюоресцентная булка R2-D3']\"}\n  (Session info: chrome=130.0.6723.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF698BA3AF5+28005]\n\t(No symbol) [0x00007FF698B083F0]\n\t(No symbol) [0x00007FF6989A580A]\n\t(No symbol) [0x00007FF6989F5A3E]\n\t(No symbol) [0x00007FF6989F5D2C]\n\t(No symbol) [0x00007FF698A3EA97]\n\t(No symbol) [0x00007FF698A1BA7F]\n\t(No symbol) [0x00007FF698A3B8B3]\n\t(No symbol) [0x00007FF698A1B7E3]\n\t(No symbol) [0x00007FF6989E75C8]\n\t(No symbol) [0x00007FF6989E8731]\n\tGetHandleVerifier [0x00007FF698E9646D+3118813]\n\tGetHandleVerifier [0x00007FF698EE6CC0+3448624]\n\tGetHandleVerifier [0x00007FF698EDCF3D+3408301]\n\tGetHandleVerifier [0x00007FF698C6A44B+841403]\n\t(No symbol) [0x00007FF698B1344F]\n\t(No symbol) [0x00007FF698B0F4C4]\n\t(No symbol) [0x00007FF698B0F65D]\n\t(No symbol) [0x00007FF698AFEBB9]\n\tBaseThreadInitThunk [0x00007FFFF6567374+20]\n\tRtlUserThreadStart [0x00007FFFF805CC91+33]", "trace": "self = <tests.test_list_of_order.TestListOfOrder object at 0x00000251FE78EB10>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a1d3a0b2b9154937e9c420cd92c4bbe8\")>\ncreate_new_user = ({'email': 'jallison@example.net', 'name': 'Erin', 'password': 'DwuxvirXbY'}, <Response [200]>), login_user = None\n\n    @allure.title('после оформления заказа его номер появляется в разделе В работе')\n    def test_make_order_number_in_list_in_status_at_work(self, driver, create_new_user, login_user):\n>       self.main_page.drug_and_drop_element_bread_R2_D3_in_basket_list()\n\ntests\\test_list_of_order.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:87: in drug_and_drop_element_bread_R2_D3_in_basket_list\n    self.drug_and_drop_element(MainPageLocators.fluorescent_bun_for_dropping, MainPageLocators.BASKET_LIST_AREA)\npages\\base_page.py:53: in drug_and_drop_element\n    source_element = self.driver.find_element(*element_one)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000251FE92FC20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF698AFEBB9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFFF6567374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFFF805CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//img[@alt = 'Флюоресцентная булка R2-D3']\"}\nE         (Session info: chrome=130.0.6723.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF698BA3AF5+28005]\nE       \t(No symbol) [0x00007FF698B083F0]\nE       \t(No symbol) [0x00007FF6989A580A]\nE       \t(No symbol) [0x00007FF6989F5A3E]\nE       \t(No symbol) [0x00007FF6989F5D2C]\nE       \t(No symbol) [0x00007FF698A3EA97]\nE       \t(No symbol) [0x00007FF698A1BA7F]\nE       \t(No symbol) [0x00007FF698A3B8B3]\nE       \t(No symbol) [0x00007FF698A1B7E3]\nE       \t(No symbol) [0x00007FF6989E75C8]\nE       \t(No symbol) [0x00007FF6989E8731]\nE       \tGetHandleVerifier [0x00007FF698E9646D+3118813]\nE       \tGetHandleVerifier [0x00007FF698EE6CC0+3448624]\nE       \tGetHandleVerifier [0x00007FF698EDCF3D+3408301]\nE       \tGetHandleVerifier [0x00007FF698C6A44B+841403]\nE       \t(No symbol) [0x00007FF698B1344F]\nE       \t(No symbol) [0x00007FF698B0F4C4]\nE       \t(No symbol) [0x00007FF698B0F65D]\nE       \t(No symbol) [0x00007FF698AFEBB9]\nE       \tBaseThreadInitThunk [0x00007FFFF6567374+20]\nE       \tRtlUserThreadStart [0x00007FFFF805CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "steps": [{"name": "Drug and drop лемента булочка x в корзину", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//img[@alt = 'Флюоресцентная булка R2-D3']\"}\n  (Session info: chrome=130.0.6723.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF698BA3AF5+28005]\n\t(No symbol) [0x00007FF698B083F0]\n\t(No symbol) [0x00007FF6989A580A]\n\t(No symbol) [0x00007FF6989F5A3E]\n\t(No symbol) [0x00007FF6989F5D2C]\n\t(No symbol) [0x00007FF698A3EA97]\n\t(No symbol) [0x00007FF698A1BA7F]\n\t(No symbol) [0x00007FF698A3B8B3]\n\t(No symbol) [0x00007FF698A1B7E3]\n\t(No symbol) [0x00007FF6989E75C8]\n\t(No symbol) [0x00007FF6989E8731]\n\tGetHandleVerifier [0x00007FF698E9646D+3118813]\n\tGetHandleVerifier [0x00007FF698EE6CC0+3448624]\n\tGetHandleVerifier [0x00007FF698EDCF3D+3408301]\n\tGetHandleVerifier [0x00007FF698C6A44B+841403]\n\t(No symbol) [0x00007FF698B1344F]\n\t(No symbol) [0x00007FF698B0F4C4]\n\t(No symbol) [0x00007FF698B0F65D]\n\t(No symbol) [0x00007FF698AFEBB9]\n\tBaseThreadInitThunk [0x00007FFFF6567374+20]\n\tRtlUserThreadStart [0x00007FFFF805CC91+33]\n\n", "trace": "  File \"C:\\Users\\LIDA\\avtotest\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\LIDA\\avtotest\\Diplom\\Diplom_3\\pages\\main_page.py\", line 87, in drug_and_drop_element_bread_R2_D3_in_basket_list\n    self.drug_and_drop_element(MainPageLocators.fluorescent_bun_for_dropping, MainPageLocators.BASKET_LIST_AREA)\n  File \"C:\\Users\\LIDA\\avtotest\\Diplom\\Diplom_3\\pages\\base_page.py\", line 53, in drug_and_drop_element\n    source_element = self.driver.find_element(*element_one)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LIDA\\avtotest\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LIDA\\avtotest\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\LIDA\\avtotest\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1730655537178, "stop": 1730655537221}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1730655537177, "stop": 1730655537224, "uuid": "b2f446ce-d16f-40b7-8823-ba756430a1f7", "historyId": "9c24352ec007beb0afcf4f57c6478af2", "testCaseId": "818a9747862325e4ea933c951cbe9af2", "fullName": "tests.test_list_of_order.TestListOfOrder#test_make_order_number_in_list_in_status_at_work", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_list_of_order"}, {"name": "subSuite", "value": "TestListOfOrder"}, {"name": "host", "value": "DESKTOP-J7NC26E"}, {"name": "thread", "value": "19036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_list_of_order"}]}